{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\components\\\\Map\\\\MapView.js\";\n\n/* eslint-disable react/no-unescaped-entities */\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\nconst icons = {\n  xxSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [12, 12]\n  }),\n  xSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [16, 16]\n  }),\n  small: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [24, 24]\n  }),\n  normal: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [32, 32]\n  }),\n  large: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [48, 48]\n  }),\n  xLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [72, 72]\n  }),\n  xxLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [96, 96]\n  })\n};\n\nfunction MapView(props) {\n  const {\n    locationArray,\n    mapCenter,\n    onSelectMarker\n  } = props;\n  const markerElements = locationArray.map(location => {\n    const {\n      // eslint-disable-next-line camelcase\n      id,\n      country_code,\n      country,\n      province,\n      coordinates: {\n        latitude,\n        longitude\n      },\n      latest: {\n        confirmed\n      }\n    } = location;\n    let markerIcon = icons.xxSmall;\n\n    if (confirmed >= 101 && confirmed <= 500) {\n      markerIcon = icons.xSmall;\n    } else if (confirmed >= 501 && confirmed <= 1000) {\n      markerIcon = icons.small;\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\n      markerIcon = icons.normal;\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\n      markerIcon = icons.large;\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\n      markerIcon = icons.xLarge;\n    } else if (confirmed >= 50001) {\n      markerIcon = icons.xxLarge;\n    }\n\n    let title = country;\n\n    if (province !== '' && province !== country) {\n      title = `${province}, ${country}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Marker // eslint-disable-next-line camelcase\n    , {\n      position: [latitude, longitude],\n      icon: markerIcon,\n      onclick: () => onSelectMarker(id),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, `${id}-${country_code}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      center: mapCenter,\n      zoom: 6,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}@2x.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), markerElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MapView;\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/components/Map/MapView.js"],"names":["React","Map","TileLayer","Marker","Popup","divIcon","icons","xxSmall","className","iconSize","xSmall","small","normal","large","xLarge","xxLarge","MapView","props","locationArray","mapCenter","onSelectMarker","markerElements","map","location","id","country_code","country","province","coordinates","latitude","longitude","latest","confirmed","markerIcon","title"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable no-undef */\nimport React from 'react';\nimport {\n  Map, TileLayer, Marker, Popup,\n} from 'react-leaflet';\nimport { divIcon } from 'leaflet';\n\nconst icons = {\n  xxSmall: divIcon({ className: 'marker-icon pink', iconSize: [12, 12] }),\n  xSmall: divIcon({ className: 'marker-icon pink', iconSize: [16, 16] }),\n  small: divIcon({ className: 'marker-icon pink', iconSize: [24, 24] }),\n  normal: divIcon({ className: 'marker-icon purple', iconSize: [32, 32] }),\n  large: divIcon({ className: 'marker-icon purple', iconSize: [48, 48] }),\n  xLarge: divIcon({ className: 'marker-icon red', iconSize: [72, 72] }),\n  xxLarge: divIcon({ className: 'marker-icon red', iconSize: [96, 96] }),\n};\n\nfunction MapView(props) {\n  const {\n    locationArray,\n    mapCenter,\n    onSelectMarker,\n  } = props;\n\n  const markerElements = locationArray.map((location) => {\n    const {\n      // eslint-disable-next-line camelcase\n      id, country_code,\n      country, province,\n      coordinates: { latitude, longitude },\n      latest: { confirmed },\n    } = location;\n\n    let markerIcon = icons.xxSmall;\n    if (confirmed >= 101 && confirmed <= 500) {\n      markerIcon = icons.xSmall;\n    } else if (confirmed >= 501 && confirmed <= 1000) {\n      markerIcon = icons.small;\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\n      markerIcon = icons.normal;\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\n      markerIcon = icons.large;\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\n      markerIcon = icons.xLarge;\n    } else if (confirmed >= 50001) {\n      markerIcon = icons.xxLarge;\n    }\n\n    let title = country;\n    if (province !== '' && province !== country) {\n      title = `${province}, ${country}`;\n    }\n\n    return (\n      <Marker\n        // eslint-disable-next-line camelcase\n        key={`${id}-${country_code}`}\n        position={[latitude, longitude]}\n        icon={markerIcon}\n        onclick={() => onSelectMarker(id)} >\n        <Popup>\n          {title}\n        </Popup>\n      </Marker>\n    );\n  });\n\n  return (\n    <div className='map'>\n      <Map center={mapCenter}\n        zoom={6}>\n        <TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}@2x.png\"\n        />\n        {markerElements}\n      </Map>\n\n    </div>\n  );\n}\nexport default MapView;\n"]},"metadata":{},"sourceType":"module"}