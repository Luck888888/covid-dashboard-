{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\components\\\\MapView.js\";\n\n/* eslint-disable */\n\n/* eslint-disable react/no-unescaped-entities */\n\n/* eslint-disable no-undef */\nimport React from 'react'; // import { MapContainer as LeafletMap,  TileLayer, Marker,  Popup } from 'react-leaflet';\n\nimport { TileLayer, Marker, Popup, MapContainer as LeafletMap } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\nimport './Map.css';\nconst icons = {\n  xxSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [12, 12]\n  }),\n  xSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [16, 16]\n  }),\n  small: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [24, 24]\n  }),\n  normal: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [32, 32]\n  }),\n  large: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [48, 48]\n  }),\n  xLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [72, 72]\n  }),\n  xxLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [96, 96]\n  })\n};\n\nfunction MapView(props) {\n  const {\n    locationArray\n  } = props;\n  const markerElements = locationArray && locationArray.map(location => {\n    const {\n      id,\n      country_code,\n      country,\n      province,\n      coordinates: {\n        latitude,\n        longitude\n      },\n      latest: {\n        confirmed\n      }\n    } = location;\n    let markerIcon = icons.xx;\n    let title = country;\n\n    if (province !== '' && province !== country) {\n      title = `${province}, ${country}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [latitude, longitude],\n      icon: icon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }, this)\n    }, `${id}-${country_code}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(LeafletMap, {\n      center: [51.505, -0.09],\n      zoom: 6,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 1\n      }, this), markerElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MapView;\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/components/MapView.js"],"names":["React","TileLayer","Marker","Popup","MapContainer","LeafletMap","divIcon","icons","xxSmall","className","iconSize","xSmall","small","normal","large","xLarge","xxLarge","MapView","props","locationArray","markerElements","map","location","id","country_code","country","province","coordinates","latitude","longitude","latest","confirmed","markerIcon","xx","title","icon"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,YAAY,IAAIC,UAAnD,QAAqE,eAArE;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAO,WAAP;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAEF,OAAO,CAAC;AAACG,IAAAA,SAAS,EAAE,kBAAZ;AAAgCC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAA1C,GAAD,CADN;AAEVC,EAAAA,MAAM,EAAEL,OAAO,CAAC;AAACG,IAAAA,SAAS,EAAE,kBAAZ;AAAgCC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAA1C,GAAD,CAFL;AAGVE,EAAAA,KAAK,EAAEN,OAAO,CAAC;AAACG,IAAAA,SAAS,EAAE,kBAAZ;AAAgCC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAA1C,GAAD,CAHJ;AAIVG,EAAAA,MAAM,EAAEP,OAAO,CAAC;AAACG,IAAAA,SAAS,EAAE,oBAAZ;AAAkCC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAA5C,GAAD,CAJL;AAKXI,EAAAA,KAAK,EAAER,OAAO,CAAC;AAACG,IAAAA,SAAS,EAAE,oBAAZ;AAAkCC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAA5C,GAAD,CALH;AAMXK,EAAAA,MAAM,EAAET,OAAO,CAAC;AAACG,IAAAA,SAAS,EAAE,iBAAZ;AAA+BC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAAzC,GAAD,CANJ;AAOXM,EAAAA,OAAO,EAAEV,OAAO,CAAC;AAACG,IAAAA,SAAS,EAAE,iBAAZ;AAA+BC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAAzC,GAAD;AAPL,CAAd;;AAUA,SAASO,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B;AAEA,QAAME,cAAc,GAAGD,aAAa,IAAIA,aAAa,CAACE,GAAd,CAAmBC,QAAD,IAAc;AACtE,UAAM;AACJC,MAAAA,EADI;AACAC,MAAAA,YADA;AAEJC,MAAAA,OAFI;AAEKC,MAAAA,QAFL;AAGJC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAHT;AAIJC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAJJ,QAKFT,QALJ;AAOA,QAAIU,UAAU,GAAGzB,KAAK,CAAC0B,EAAvB;AAEA,QAAIC,KAAK,GAAGT,OAAZ;;AAEA,QAAIC,QAAQ,KAAK,EAAb,IAAmBA,QAAQ,KAAKD,OAApC,EAA6C;AAC3CS,MAAAA,KAAK,GAAI,GAAER,QAAS,KAAID,OAAQ,EAAhC;AACD;;AAED,wBAAQ,QAAC,MAAD;AACS,MAAA,QAAQ,EAAE,CAACG,QAAD,EAAWC,SAAX,CADnB;AAES,MAAA,IAAI,EAAEM,IAFf;AAAA,6BAGU,QAAC,KAAD;AAAA,kBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA;AAHV,OAAe,GAAEX,EAAG,IAAGC,YAAa,EAApC;AAAA;AAAA;AAAA;AAAA,YAAR;AAKD,GArBuC,CAAxC;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACJ,QAAC,UAAD;AAAY,MAAA,MAAM,EAAE,CAAC,MAAD,EAAS,CAAC,IAAV,CAApB;AACQ,MAAA,IAAI,EAAE,CADd;AAAA,8BAEA,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,2EAAvB;AACW,QAAA,GAAG,EAAC;AADf;AAAA;AAAA;AAAA;AAAA,cAFA,EAKKJ,cALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KArCQH,O;AAsCT,eAAeA,OAAf","sourcesContent":["/* eslint-disable */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\n// import { MapContainer as LeafletMap,  TileLayer, Marker,  Popup } from 'react-leaflet';\r\nimport { TileLayer, Marker, Popup, MapContainer as LeafletMap } from 'react-leaflet';\r\nimport { divIcon } from 'leaflet';\r\nimport './Map.css';\r\n\r\nconst icons = {\r\n    xxSmall: divIcon({className: 'marker-icon pink', iconSize: [12, 12]}),\r\n    xSmall: divIcon({className: 'marker-icon pink', iconSize: [16, 16]}),\r\n    small: divIcon({className: 'marker-icon pink', iconSize: [24, 24]}),\r\n    normal: divIcon({className: 'marker-icon purple', iconSize: [32, 32]}),\r\n\t  large: divIcon({className: 'marker-icon purple', iconSize: [48, 48]}),\r\n\t  xLarge: divIcon({className: 'marker-icon red', iconSize: [72, 72]}),\r\n\t  xxLarge: divIcon({className: 'marker-icon red', iconSize: [96, 96]})\r\n};\r\n\r\nfunction MapView(props) {\r\n  const { locationArray } = props;\r\n\r\n  const markerElements = locationArray && locationArray.map((location) => {\r\n    const {\r\n      id, country_code,\r\n      country, province,\r\n      coordinates: { latitude, longitude },\r\n      latest: { confirmed },\r\n    } = location;\r\n\r\n    let markerIcon = icons.xx\r\n\r\n    let title = country;\r\n\r\n    if (province !== '' && province !== country) {\r\n      title = `${province}, ${country}`;\r\n    }\r\n\r\n    return (<Marker  key={`${id}-${country_code}`}\r\n                     position={[latitude, longitude]}\r\n                     icon={icon} >\r\n                      <Popup>{title}</Popup>\r\n       </Marker>);\r\n  });\r\n\r\n  return (\r\n    <div className='map'>\r\n<LeafletMap center={[51.505, -0.09]}\r\n        zoom={6}>\r\n<TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n    {markerElements}\r\n</LeafletMap>\r\n    </div>\r\n  );\r\n}\r\nexport default MapView;\r\n"]},"metadata":{},"sourceType":"module"}