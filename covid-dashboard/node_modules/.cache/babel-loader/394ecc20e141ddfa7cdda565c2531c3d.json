{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\App.jsx\",\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport './Css/App.scss';\nimport React, { useState } from 'react';\nimport Table1 from './table1.jsx';\nimport Table1p2 from './table1p2.jsx';\nimport useFetch from './getInfo.jsx';\nimport Summary from './components/Summary.jsx';\nimport 'leaflet/dist/leaflet.css';\nimport { filterInfo, periodInfo, statusInfo } from './table1Info';\nimport findCountryInfo from './findCountryInfo';\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const info = useFetch('https://api.covid19api.com/summary');\n  const [countryData, setCountry] = useState('Belarus');\n\n  const filterData = (period, status) => filterInfo(info, period, status);\n\n  const findCountry = country => {\n    _s();\n\n    setCountry(country);\n    const [locationArray, setLocationArray] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    function sortedLocationArray(locations) {\n      // eslint-disable-next-line max-len\n      return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\n    }\n\n    useEffect(() => {\n      setLoading(true);\n      axios.get('/v2/locations').then(res => {\n        const sortedLocations = sortedLocationArray(res.data.locations);\n        setLoading(false);\n\n        if (res.status === 200) {\n          setLocationArray(sortedLocations);\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }, []); // console.log(locationArray);\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Fetching!!! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }, this);\n    }\n  };\n\n  _s(findCountry, \"YC3WhQvoy1LiabVpsjj1xQZkfa0=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"COVID-19 Dashboard by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), info && /*#__PURE__*/_jsxDEV(Table1, {\n      filterData: filterData,\n      info: filterInfo(info, 0, 0),\n      periodInfo: periodInfo,\n      findCountry: findCountry,\n      statusInfo: statusInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this), info && /*#__PURE__*/_jsxDEV(Table1p2, {\n      info: findCountryInfo(info, countryData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Summary, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"0wR985U3BFkPI4204tKQUmA6UuM=\", false, function () {\n  return [useFetch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/App.jsx"],"names":["React","useState","Table1","Table1p2","useFetch","Summary","filterInfo","periodInfo","statusInfo","findCountryInfo","App","info","countryData","setCountry","filterData","period","status","findCountry","country","locationArray","setLocationArray","loading","setLoading","sortedLocationArray","locations","sort","location1","location2","latest","confirmed","useEffect","axios","get","then","res","sortedLocations","data","catch","error","console","log"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport './Css/App.scss';\r\nimport React, { useState } from 'react';\r\nimport Table1 from './table1.jsx';\r\nimport Table1p2 from './table1p2.jsx';\r\nimport useFetch from './getInfo.jsx';\r\nimport Summary from './components/Summary.jsx';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nimport {\r\n  filterInfo,\r\n  periodInfo,\r\n  statusInfo,\r\n} from './table1Info';\r\nimport findCountryInfo from './findCountryInfo';\r\n\r\nfunction App() {\r\n  const info = useFetch('https://api.covid19api.com/summary');\r\n  const [countryData, setCountry] = useState('Belarus');\r\n\r\n  const filterData = (period, status) => filterInfo(info, period, status);\r\n  const findCountry = (country) => {\r\n    setCountry(country);\r\nconst [locationArray, setLocationArray] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function sortedLocationArray(locations) {\r\n    // eslint-disable-next-line max-len\r\n    return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\r\n  }\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get('/v2/locations').then((res) => {\r\n      const sortedLocations = sortedLocationArray(res.data.locations);\r\n      setLoading(false);\r\n\r\n      if (res.status === 200) {\r\n        setLocationArray(sortedLocations);\r\n      }\r\n    })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  // console.log(locationArray);\r\n\r\n  if (loading) {\r\n    return <p> Fetching!!! </p>;\r\n  }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>COVID-19 Dashboard by the Center for Systems Science and Engineering\r\n(CSSE) at Johns Hopkins University (JHU)</h1>\r\n      </header>\r\n      {info && <Table1\r\n        filterData={filterData}\r\n        info={filterInfo(info, 0, 0)}\r\n        periodInfo={periodInfo}\r\n        findCountry={findCountry}\r\n        statusInfo={statusInfo}\r\n      />}\r\n      {info && <Table1p2 info={findCountryInfo(info, countryData)} />}\r\n\r\n      <Summary />\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}