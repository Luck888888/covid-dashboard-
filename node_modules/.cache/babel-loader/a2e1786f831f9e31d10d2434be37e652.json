{"ast":null,"code":"var _s = $RefreshSig$();\n\n/* eslint-disable no-nested-ternary */\nimport { useLeaflet } from 'react-leaflet';\nimport L from 'leaflet';\nimport { useEffect } from 'react';\n\nconst Legend = () => {\n  _s();\n\n  const {\n    map\n  } = useLeaflet();\n  console.log(map);\n  useEffect(() => {\n    // get color depending on population density value\n    const getColor = d => d > 1000 ? '#800026' : d > 500 ? '#BD0026' : d > 200 ? '#E31A1C' : d > 100 ? '#FC4E2A' : d > 50 ? '#FD8D3C' : d > 20 ? '#FEB24C' : d > 10 ? '#FED976' : '#FFEDA0';\n\n    const legend = L.control({\n      position: 'bottomright'\n    });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create('div', 'info legend');\n      const grades = [0, 10, 20, 50, 100, 200, 500, 1000]; // const labels = [];\n      // let from;\n      // let to;\n\n      for (let i = 0; i < grades.length; i += 1) {\n        // from = grades[i];\n        // to = grades[i + 1];\n        div.innerHTML += `<i style=\"background:${getColor(grades[i] + 1)}\"></i> ${grades[i]}${grades[i + 1] ? `&ndash;${grades[i + 1]}<br>` : '+'}`;\n      }\n\n      return div;\n    }; // eslint-disable-next-line no-shadow\n\n\n    const {\n      map\n    } = this.props.leaflet;\n    legend.addTo(map);\n  });\n  return null;\n};\n\n_s(Legend, \"+syOB7ozccyMNsnl2GtxQMWtaB0=\", false, function () {\n  return [useLeaflet];\n});\n\n_c = Legend;\nexport default Legend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Legend\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/components/Map/legend.jsx"],"names":["useLeaflet","L","useEffect","Legend","map","console","log","getColor","d","legend","control","position","onAdd","div","DomUtil","create","grades","i","length","innerHTML","props","leaflet","addTo"],"mappings":";;AAAA;AACA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAUJ,UAAU,EAA1B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMK,QAAQ,GAAIC,CAAD,IAAQA,CAAC,GAAG,IAAJ,GACrB,SADqB,GAErBA,CAAC,GAAG,GAAJ,GACE,SADF,GAEEA,CAAC,GAAG,GAAJ,GACE,SADF,GAEEA,CAAC,GAAG,GAAJ,GACE,SADF,GAEEA,CAAC,GAAG,EAAJ,GACE,SADF,GAEEA,CAAC,GAAG,EAAJ,GACE,SADF,GAEEA,CAAC,GAAG,EAAJ,GACE,SADF,GAEE,SAdhB;;AAgBA,UAAMC,MAAM,GAAGR,CAAC,CAACS,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAf;;AAEAF,IAAAA,MAAM,CAACG,KAAP,GAAe,MAAM;AACnB,YAAMC,GAAG,GAAGZ,CAAC,CAACa,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAZ;AACA,YAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,IAA/B,CAAf,CAFmB,CAGnB;AACA;AACA;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACE,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC;AACA;AAEAJ,QAAAA,GAAG,CAACM,SAAJ,IACM,wBACFZ,QAAQ,CAACS,MAAM,CAACC,CAAD,CAAN,GAAY,CAAb,CACT,UACCD,MAAM,CAACC,CAAD,CACP,GAAED,MAAM,CAACC,CAAC,GAAG,CAAL,CAAN,GAAiB,UAASD,MAAM,CAACC,CAAC,GAAG,CAAL,CAAQ,MAAxC,GAAgD,GAAI,EALzD;AAMD;;AAED,aAAOJ,GAAP;AACD,KApBD,CApBc,CAyCd;;;AACA,UAAM;AAAET,MAAAA;AAAF,QAAU,KAAKgB,KAAL,CAAWC,OAA3B;AACAZ,IAAAA,MAAM,CAACa,KAAP,CAAalB,GAAb;AACD,GA5CQ,CAAT;AA6CA,SAAO,IAAP;AACD,CAlDD;;GAAMD,M;UACYH,U;;;KADZG,M;AAoDN,eAAeA,MAAf","sourcesContent":["/* eslint-disable no-nested-ternary */\r\nimport { useLeaflet } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport { useEffect } from 'react';\r\n\r\nconst Legend = () => {\r\n  const { map } = useLeaflet();\r\n  console.log(map);\r\n\r\n  useEffect(() => {\r\n    // get color depending on population density value\r\n    const getColor = (d) => (d > 1000\r\n      ? '#800026'\r\n      : d > 500\r\n        ? '#BD0026'\r\n        : d > 200\r\n          ? '#E31A1C'\r\n          : d > 100\r\n            ? '#FC4E2A'\r\n            : d > 50\r\n              ? '#FD8D3C'\r\n              : d > 20\r\n                ? '#FEB24C'\r\n                : d > 10\r\n                  ? '#FED976'\r\n                  : '#FFEDA0');\r\n\r\n    const legend = L.control({ position: 'bottomright' });\r\n\r\n    legend.onAdd = () => {\r\n      const div = L.DomUtil.create('div', 'info legend');\r\n      const grades = [0, 10, 20, 50, 100, 200, 500, 1000];\r\n      // const labels = [];\r\n      // let from;\r\n      // let to;\r\n\r\n      for (let i = 0; i < grades.length; i += 1) {\r\n        // from = grades[i];\r\n        // to = grades[i + 1];\r\n\r\n        div.innerHTML\r\n          += `<i style=\"background:${\r\n            getColor(grades[i] + 1)\r\n          }\"></i> ${\r\n            grades[i]\r\n          }${grades[i + 1] ? `&ndash;${grades[i + 1]}<br>` : '+'}`;\r\n      }\r\n\r\n      return div;\r\n    };\r\n    // eslint-disable-next-line no-shadow\r\n    const { map } = this.props.leaflet;\r\n    legend.addTo(map);\r\n  });\r\n  return null;\r\n};\r\n\r\nexport default Legend;\r\n"]},"metadata":{},"sourceType":"module"}