{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\components\\\\MapView.js\";\n\n/* eslint-disable react/no-unescaped-entities */\n\n/* eslint-disable no-undef */\nimport React from 'react';\nimport { TileLayer, Marker, Popup, MapContainer as LeafletMap } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\nconst icons = {\n  xxSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [12, 12]\n  }),\n  xSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [16, 16]\n  }),\n  small: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [24, 24]\n  }),\n  normal: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [32, 32]\n  }),\n  large: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [48, 48]\n  }),\n  xLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [72, 72]\n  }),\n  xxLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [96, 96]\n  })\n};\n\nfunction MapView(props) {\n  const {\n    locationArray,\n    mapCenter,\n    onSelectMarker\n  } = props; // const [locationArray, setLocationArray] = useState([]);\n  // const [loading, setLoading] = useState(false);\n  // function sortedLocationArray(locations) {\n  //   // eslint-disable-next-line max-len\n  // eslint-disable-next-line max-len\n  //   return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\n  // }\n  // useEffect(() => {\n  //   setLoading(true);\n  //   axios.get('/v2/locations').then((res) => {\n  //     const sortedLocations = sortedLocationArray(res.data.locations);\n  //     setLoading(false);\n  //     if (res.status === 200) {\n  //       setLocationArray(sortedLocations);\n  //     }\n  //   })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  // }, []);\n  // // console.log(locationArray);\n  // if (loading) {\n  //   return <p> Fetching!!! </p>;\n  // }\n\n  const markerElements = locationArray.map(location => {\n    const {\n      // eslint-disable-next-line camelcase\n      id,\n      country_code,\n      country,\n      province,\n      coordinates: {\n        latitude,\n        longitude\n      },\n      latest: {\n        confirmed\n      }\n    } = location;\n    let markerIcon = icons.xxSmall;\n\n    if (confirmed >= 101 && confirmed <= 500) {\n      markerIcon = icons.xSmall;\n    } else if (confirmed >= 501 && confirmed <= 1000) {\n      markerIcon = icons.small;\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\n      markerIcon = icons.normal;\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\n      markerIcon = icons.large;\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\n      markerIcon = icons.xLarge;\n    } else if (confirmed >= 50001) {\n      markerIcon = icons.xxLarge;\n    }\n\n    let title = country;\n\n    if (province !== '' && province !== country) {\n      title = `${province}, ${country}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Marker // eslint-disable-next-line camelcase\n    , {\n      position: [latitude, longitude],\n      icon: markerIcon,\n      onclick: () => onSelectMarker(id),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-container\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, `${id}-${country_code}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(LeafletMap, {\n      center: mapCenter,\n      zoom: 6,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 1\n      }, this), markerElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MapView;\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/components/MapView.js"],"names":["React","TileLayer","Marker","Popup","MapContainer","LeafletMap","divIcon","icons","xxSmall","className","iconSize","xSmall","small","normal","large","xLarge","xxLarge","MapView","props","locationArray","mapCenter","onSelectMarker","markerElements","map","location","id","country_code","country","province","coordinates","latitude","longitude","latest","confirmed","markerIcon","title"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport {\r\n  TileLayer, Marker, Popup, MapContainer as LeafletMap,\r\n} from 'react-leaflet';\r\nimport { divIcon } from 'leaflet';\r\n\r\nconst icons = {\r\n  xxSmall: divIcon({ className: 'marker-icon pink', iconSize: [12, 12] }),\r\n  xSmall: divIcon({ className: 'marker-icon pink', iconSize: [16, 16] }),\r\n  small: divIcon({ className: 'marker-icon pink', iconSize: [24, 24] }),\r\n  normal: divIcon({ className: 'marker-icon purple', iconSize: [32, 32] }),\r\n  large: divIcon({ className: 'marker-icon purple', iconSize: [48, 48] }),\r\n  xLarge: divIcon({ className: 'marker-icon red', iconSize: [72, 72] }),\r\n  xxLarge: divIcon({ className: 'marker-icon red', iconSize: [96, 96] }),\r\n};\r\n\r\nfunction MapView(props) {\r\n  const { locationArray, mapCenter, onSelectMarker } = props;\r\n  // const [locationArray, setLocationArray] = useState([]);\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  // function sortedLocationArray(locations) {\r\n  //   // eslint-disable-next-line max-len\r\n  // eslint-disable-next-line max-len\r\n  //   return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\r\n  // }\r\n  // useEffect(() => {\r\n  //   setLoading(true);\r\n  //   axios.get('/v2/locations').then((res) => {\r\n  //     const sortedLocations = sortedLocationArray(res.data.locations);\r\n  //     setLoading(false);\r\n\r\n  //     if (res.status === 200) {\r\n  //       setLocationArray(sortedLocations);\r\n  //     }\r\n  //   })\r\n  //     .catch((error) => {\r\n  //       console.log(error);\r\n  //     });\r\n  // }, []);\r\n  // // console.log(locationArray);\r\n\r\n  // if (loading) {\r\n  //   return <p> Fetching!!! </p>;\r\n  // }\r\n\r\n  const markerElements = locationArray.map((location) => {\r\n    const {\r\n      // eslint-disable-next-line camelcase\r\n      id, country_code,\r\n      country, province,\r\n      coordinates: { latitude, longitude },\r\n      latest: { confirmed },\r\n    } = location;\r\n\r\n    let markerIcon = icons.xxSmall;\r\n    if (confirmed >= 101 && confirmed <= 500) {\r\n      markerIcon = icons.xSmall;\r\n    } else if (confirmed >= 501 && confirmed <= 1000) {\r\n      markerIcon = icons.small;\r\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\r\n      markerIcon = icons.normal;\r\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\r\n      markerIcon = icons.large;\r\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\r\n      markerIcon = icons.xLarge;\r\n    } else if (confirmed >= 50001) {\r\n      markerIcon = icons.xxLarge;\r\n    }\r\n\r\n    let title = country;\r\n    if (province !== '' && province !== country) {\r\n      title = `${province}, ${country}`;\r\n    }\r\n\r\n    return (\r\n            <Marker\r\n                // eslint-disable-next-line camelcase\r\n                key={`${id}-${country_code}`}\r\n                position={[latitude, longitude]}\r\n                icon={markerIcon}\r\n                onclick={() => onSelectMarker(id)} >\r\n                <Popup>\r\n         <div className=\"info-container\">\r\n                  {title}\r\n         </div>\r\n               </Popup>\r\n            </Marker>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className='map'>\r\n<LeafletMap center={mapCenter}\r\n        zoom={6}>\r\n<TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n    {markerElements}\r\n</LeafletMap>\r\n    </div>\r\n  );\r\n}\r\nexport default MapView;\r\n"]},"metadata":{},"sourceType":"module"}