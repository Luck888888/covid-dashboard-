{"ast":null,"code":"import _regeneratorRuntime from\"E:/RssSchool/Covid_My/covid-dashboard-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/RssSchool/Covid_My/covid-dashboard-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/RssSchool/Covid_My/covid-dashboard-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';var useFetch=function useFetch(url){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,dataArray;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(url);case 2:res=_context.sent;_context.next=5;return res.json();case 5:dataArray=_context.sent;setData(dataArray);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[url]);return data;};export default useFetch;","map":{"version":3,"sources":["E:/RssSchool/Covid_My/covid-dashboard-/src/components/getInfo.jsx"],"names":["useState","useEffect","useFetch","url","data","setData","fetchData","fetch","res","json","dataArray"],"mappings":"odAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAS,eACAH,QAAQ,CAAC,IAAD,CADR,wCACjBI,IADiB,eACXC,OADW,eAGxBJ,SAAS,CAAC,UAAM,CACd,GAAMK,CAAAA,SAAS,0FAAG,2KACEC,CAAAA,KAAK,CAACJ,GAAD,CADP,QACVK,GADU,qCAEQA,CAAAA,GAAG,CAACC,IAAJ,EAFR,QAEVC,SAFU,eAGhBL,OAAO,CAACK,SAAD,CAAP,CAHgB,sDAAH,kBAATJ,CAAAA,SAAS,0CAAf,CAMAA,SAAS,GACV,CARQ,CAQN,CAACH,GAAD,CARM,CAAT,CAUA,MAAOC,CAAAA,IAAP,CACD,CAdD,CAgBA,cAAeF,CAAAA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const res = await fetch(url);\n      const dataArray = await res.json();\n      setData(dataArray);\n    };\n\n    fetchData();\n  }, [url]);\n\n  return data;\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}