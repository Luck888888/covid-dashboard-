{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './CSS/App.scss'; // import numeral from 'numeral';\n// import ArraySort from 'array-sort';\n// import { Card, CardContent } from '@material-ui/core';\n\nimport axios from './axios';\nimport Summary from './components/Summary.jsx';\nimport MapView from './components/MapView';\nimport 'leaflet/dist/leaflet.css';\nimport DetailsView from './components/DetailsView.jsx';\n\nfunction App() {\n  _s();\n\n  const [locationArray, setLocationArray] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [mapCenter, setMapCenter] = useState([13, 100]);\n\n  function sortedLocationArray(locations) {\n    return [...locations].sort((location1, location2) => {\n      return location2.latest.confirmed - location1.latest.confirmed;\n    });\n  }\n\n  const onSelectLocation = useCallback(id => {\n    const location = locationArray.find(_location => _location.id === id);\n\n    if (location === undefined) {\n      setSelectedLocation(null);\n      return;\n    }\n\n    setSelectedLocation(location);\n    const {\n      coordinates: {\n        latitude,\n        longitude\n      }\n    } = location;\n    setMapCenter([latitude, longitude]);\n  }, [locationArray]);\n  const onDeselectLocation = useCallback(() => {\n    setSelectedLocation(null);\n  }, []);\n  React.useEffect(() => {\n    setLoading(true);\n    axios.get('/v2/locations').then(res => {\n      const sortedLocations = sortedLocationArray(res.data.locations);\n      setLoading(false);\n\n      if (res.status === 200) {\n        // setTotalConfirmed(res.data.Global.TotalConfirmed);\n        // setTotalRecovered(res.data.Global.NewRecovered);\n        // setTotalDeaths(res.data.Global.TotalDeaths);\n        // setCovidSummary(res.data);\n        setLocationArray(sortedLocations); // setCovidSummary = ArraySort(setCovidSummary, 'TotalConfirmed', { reverse: true });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  console.log(locationArray);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Fetching!!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 Dashboard by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(Summary, {\n        locationArray: locationArray,\n        selectedLocation: selectedLocation,\n        onSelectItem: onSelectLocation,\n        onDeselectItem: onDeselectLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards_map\",\n        children: [/*#__PURE__*/_jsxDEV(MapView, {\n          locationArray: locationArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(DetailsView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Fj0PJMukkBKueX2rxE94tFgCycU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/App.jsx"],"names":["React","axios","Summary","MapView","DetailsView","App","locationArray","setLocationArray","useState","selectedLocation","setSelectedLocation","mapCenter","setMapCenter","sortedLocationArray","locations","sort","location1","location2","latest","confirmed","onSelectLocation","useCallback","id","location","find","_location","undefined","coordinates","latitude","longitude","onDeselectLocation","useEffect","setLoading","get","then","res","sortedLocations","data","status","catch","error","console","log","loading"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './CSS/App.scss';\r\n// import numeral from 'numeral';\r\n// import ArraySort from 'array-sort';\r\n// import { Card, CardContent } from '@material-ui/core';\r\nimport axios from './axios';\r\nimport Summary from './components/Summary.jsx';\r\nimport MapView from './components/MapView';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport DetailsView from './components/DetailsView.jsx';\r\n\r\nfunction App() {\r\n  const [locationArray, setLocationArray] = useState([]);\r\n\tconst [selectedLocation, setSelectedLocation] = useState(null);\r\n\tconst [mapCenter, setMapCenter]= useState([13, 100]);\r\n\r\n\tfunction sortedLocationArray(locations) {\r\n\t\treturn [...locations].sort((location1, location2) => {\r\n\t\t\treturn location2.latest.confirmed - location1.latest.confirmed;\r\n\t\t});\r\n\t}\r\n\r\n\tconst onSelectLocation = useCallback((id) => {\r\n\t\tconst location = locationArray.find(_location => _location.id === id);\r\n\t\tif (location === undefined) {\r\n\t\t\tsetSelectedLocation(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetSelectedLocation(location);\r\n\t\tconst { coordinates: { latitude, longitude } } = location;\r\n\t\tsetMapCenter([latitude, longitude]);\r\n\t}, [locationArray]);\r\n\r\n\tconst onDeselectLocation = useCallback(() => {\r\n\t\tsetSelectedLocation(null);\r\n\t}, []);\r\n\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    axios.get('/v2/locations').then((res) => {\r\n      const sortedLocations = sortedLocationArray(res.data.locations);\r\n      setLoading(false);\r\n\r\n      if (res.status === 200) {\r\n        // setTotalConfirmed(res.data.Global.TotalConfirmed);\r\n        // setTotalRecovered(res.data.Global.NewRecovered);\r\n        // setTotalDeaths(res.data.Global.TotalDeaths);\r\n        // setCovidSummary(res.data);\r\n        setLocationArray(sortedLocations);\r\n        // setCovidSummary = ArraySort(setCovidSummary, 'TotalConfirmed', { reverse: true });\r\n      }\r\n    })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  console.log(locationArray);\r\n\r\n  if (loading) {\r\n    return <p> Fetching!!! </p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n<div className=\"app__left\">\r\n <div className=\"app__header\">\r\n<h1>COVID-19 Dashboard by the Center for Systems Science and Engineering\r\n(CSSE) at Johns Hopkins University (JHU)</h1>\r\n   </div>\r\n\r\n<Summary\r\n      locationArray={locationArray}\r\n      selectedLocation={selectedLocation}\r\n      onSelectItem={onSelectLocation}\r\n      onDeselectItem={onDeselectLocation}\r\n\r\n                                  />\r\n {/* <div className=\"app__stats\"> <Summary\r\n    //  totalConfirmed={totalConfirmed}\r\n    //  totalRecovered={totalRecovered}\r\n    //  totalDeaths={totalDeaths}\r\n    //  covidSummary={covidSummary}\r\n     country={''}\r\n/></div> */}\r\n<div className='cards_map'>\r\n\r\n<MapView locationArray={locationArray} />\r\n<DetailsView />\r\n\r\n</div>\r\n\r\n{/* <Card className=\"app__right\">\r\n      <CardContent>\r\n<div className='table'>\r\n       <h3>Cases by Country/Region/Sovereignty</h3> */}\r\n           {/* {covidSummary.Countries && covidSummary.Countries.map((country) => (\r\n        // eslint-disable-next-line react/jsx-key\r\n        <tr>\r\n          <td>{country.Country}</td>\r\n       <td>\r\n             <strong>{numeral(country.TotalConfirmed).format(' ')}</strong>\r\n          </td>\r\n        </tr>\r\n           ))} */}\r\n{/* </div>\r\n        </CardContent>\r\n      </Card> */}\r\n\r\n</div>\r\n </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}