{"ast":null,"code":"export const periodInfo = ['Whole period', 'Latest day'];\nexport const statusInfo = ['Global cases', 'Global deaths', 'Global recovered'];\nexport const filterInfo = (information, period, status) => {\n  let result = [];\n  const filteredInfo = [];\n  const globalInfo = [];\n  const global = information.Global;\n  const info = information.Countries;\n\n  if (status === 0 && period === 0) {\n    info.forEach(el => {\n      const countryInfo = {\n        country: el.Country,\n        info: el.TotalConfirmed\n      };\n      filteredInfo.push(countryInfo);\n    });\n    globalInfo.push({\n      global: global.TotalConfirmed,\n      textline: 'Global Cases',\n      rowText: 'cases'\n    });\n  } else if (status === 0 && period === 1) {\n    info.forEach(el => {\n      const countryInfo = {\n        country: el.Country,\n        info: el.NewConfirmed\n      };\n      filteredInfo.push(countryInfo);\n    });\n    globalInfo.push({\n      global: global.NewConfirmed,\n      textline: 'Global Cases',\n      rowText: 'cases'\n    });\n  } else if (status === 1 && period === 0) {\n    info.forEach(el => {\n      const countryInfo = {\n        country: el.Country,\n        info: el.TotalDeaths\n      };\n      filteredInfo.push(countryInfo);\n    });\n    globalInfo.push({\n      global: global.TotalDeaths,\n      textline: 'Global Deaths',\n      rowText: 'deaths'\n    });\n  } else if (status === 1 && period === 1) {\n    info.forEach(el => {\n      const countryInfo = {\n        country: el.Country,\n        info: el.NewDeaths\n      };\n      filteredInfo.push(countryInfo);\n    });\n    globalInfo.push({\n      global: global.NewDeaths,\n      textline: 'Global Deaths',\n      rowText: 'deaths'\n    });\n  } else if (status === 2 && period === 0) {\n    info.forEach(el => {\n      const countryInfo = {\n        country: el.Country,\n        info: el.TotalRecovered\n      };\n      filteredInfo.push(countryInfo);\n    });\n    globalInfo.push({\n      global: global.TotalRecovered,\n      textline: 'Global Recovery',\n      rowText: 'recovered'\n    });\n  } else if (status === 2 && period === 1) {\n    info.forEach(el => {\n      const countryInfo = {\n        country: el.Country,\n        info: el.NewRecovered\n      };\n      filteredInfo.push(countryInfo);\n    });\n    globalInfo.push({\n      global: global.NewRecovered,\n      textline: 'Global Recovery',\n      rowText: 'recovered'\n    });\n  }\n\n  filteredInfo.sort((a, b) => a.info < b.info ? 1 : -1);\n  result = [filteredInfo, globalInfo];\n  return result;\n};\nexport const findCountryInfo = (information, country) => {\n  let countryInfo = {};\n  const info = information.Countries;\n  info.forEach(el => {\n    if (el.Country === country) {\n      countryInfo = {\n        country: el.Country,\n        NewConfirmed: el.NewConfirmed,\n        TotalConfirmed: el.TotalConfirmed,\n        NewDeaths: el.NewDeaths,\n        TotalDeaths: el.TotalDeaths,\n        NewRecovered: el.NewRecovered,\n        TotalRecovered: el.TotalRecovered\n      };\n    }\n  });\n  return countryInfo;\n};","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/table1Info.js"],"names":["periodInfo","statusInfo","filterInfo","information","period","status","result","filteredInfo","globalInfo","global","Global","info","Countries","forEach","el","countryInfo","country","Country","TotalConfirmed","push","textline","rowText","NewConfirmed","TotalDeaths","NewDeaths","TotalRecovered","NewRecovered","sort","a","b","findCountryInfo"],"mappings":"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","sourcesContent":["export const periodInfo = ['Whole period', 'Latest day'];\r\nexport const statusInfo = ['Global cases', 'Global deaths', 'Global recovered'];\r\n\r\nexport const filterInfo = (information, period, status) => {\r\n  let result = [];\r\n  const filteredInfo = [];\r\n  const globalInfo = [];\r\n  const global = information.Global;\r\n  const info = information.Countries;\r\n  if (status === 0 && period === 0) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.TotalConfirmed,\r\n\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n\r\n    globalInfo.push({\r\n      global: global.TotalConfirmed,\r\n      textline: 'Global Cases',\r\n      rowText: 'cases',\r\n    });\r\n  } else if (status === 0 && period === 1) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.NewConfirmed,\r\n\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.NewConfirmed,\r\n      textline: 'Global Cases',\r\n      rowText: 'cases',\r\n    });\r\n  } else if (status === 1 && period === 0) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.TotalDeaths,\r\n\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.TotalDeaths,\r\n      textline: 'Global Deaths',\r\n      rowText: 'deaths',\r\n    });\r\n  } else if (status === 1 && period === 1) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.NewDeaths,\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.NewDeaths,\r\n      textline: 'Global Deaths',\r\n      rowText: 'deaths',\r\n    });\r\n  } else if (status === 2 && period === 0) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.TotalRecovered,\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.TotalRecovered,\r\n      textline: 'Global Recovery',\r\n      rowText: 'recovered',\r\n    });\r\n  } else if (status === 2 && period === 1) {\r\n    info.forEach((el) => {\r\n      const countryInfo = {\r\n        country: el.Country,\r\n        info: el.NewRecovered,\r\n      };\r\n      filteredInfo.push(countryInfo);\r\n    });\r\n    globalInfo.push({\r\n      global: global.NewRecovered,\r\n      textline: 'Global Recovery',\r\n      rowText: 'recovered',\r\n    });\r\n  }\r\n  filteredInfo.sort((a, b) => ((a.info < b.info) ? 1 : -1));\r\n  result = [filteredInfo, globalInfo];\r\n\r\n  return result;\r\n};\r\n\r\nexport const findCountryInfo = (information, country) => {\r\n  let countryInfo = {};\r\n  const info = information.Countries;\r\n  info.forEach((el) => {\r\n    if (el.Country === country) {\r\n      countryInfo = {\r\n        country: el.Country,\r\n        NewConfirmed: el.NewConfirmed,\r\n        TotalConfirmed: el.TotalConfirmed,\r\n        NewDeaths: el.NewDeaths,\r\n        TotalDeaths: el.TotalDeaths,\r\n        NewRecovered: el.NewRecovered,\r\n        TotalRecovered: el.TotalRecovered,\r\n      };\r\n    }\r\n  });\r\n  return countryInfo;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}