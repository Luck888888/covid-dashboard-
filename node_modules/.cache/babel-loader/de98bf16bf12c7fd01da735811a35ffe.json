{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\components\\\\MapView.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-unescaped-entities */\n\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react';\nimport { TileLayer, Marker, Popup, MapContainer as LeafletMap } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\nimport axios from '../axios';\nimport './Map.css';\nconst icons = {\n  xxSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [12, 12]\n  }),\n  xSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [16, 16]\n  }),\n  small: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [24, 24]\n  }),\n  normal: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [32, 32]\n  }),\n  large: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [48, 48]\n  }),\n  xLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [72, 72]\n  }),\n  xxLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [96, 96]\n  })\n};\n\nfunction MapView() {\n  _s();\n\n  const [locationArray, setLocationArray] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  function sortedLocationArray(locations) {\n    // eslint-disable-next-line max-len\n    return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get('/v2/locations').then(res => {\n      const sortedLocations = sortedLocationArray(res.data.locations);\n      setLoading(false);\n\n      if (res.status === 200) {\n        setLocationArray(sortedLocations);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // console.log(locationArray);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Fetching!!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  const markerElements = locationArray && locationArray.map(location => {\n    const {\n      // eslint-disable-next-line camelcase\n      id,\n      country_code,\n      country,\n      province,\n      coordinates: {\n        latitude,\n        longitude\n      },\n      latest: {\n        confirmed\n      }\n    } = location;\n    let markerIcon = icons.xxSmall;\n\n    if (confirmed >= 101 && confirmed <= 500) {\n      markerIcon = icons.xSmall;\n    } else if (confirmed >= 501 && confirmed <= 1000) {\n      markerIcon = icons.small;\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\n      markerIcon = icons.normal;\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\n      markerIcon = icons.large;\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\n      markerIcon = icons.xLarge;\n    } else if (confirmed >= 50001) {\n      markerIcon = icons.xxLarge;\n    }\n\n    let title = country;\n\n    if (province !== '' && province !== country) {\n      title = `${province}, ${country}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [latitude, longitude],\n      icon: markerIcon,\n      onclick: () => onSelectMarker(id),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, `${id}-${country_code}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(LeafletMap, {\n      center: [51.505, -0.09],\n      zoom: 6,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 1\n      }, this), markerElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MapView, \"YC3WhQvoy1LiabVpsjj1xQZkfa0=\");\n\n_c = MapView;\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/components/MapView.js"],"names":["React","useState","useEffect","TileLayer","Marker","Popup","MapContainer","LeafletMap","divIcon","axios","icons","xxSmall","className","iconSize","xSmall","small","normal","large","xLarge","xxLarge","MapView","locationArray","setLocationArray","loading","setLoading","sortedLocationArray","locations","sort","location1","location2","latest","confirmed","get","then","res","sortedLocations","data","status","catch","error","console","log","markerElements","map","location","id","country_code","country","province","coordinates","latitude","longitude","markerIcon","title","onSelectMarker"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-undef */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  TileLayer, Marker, Popup, MapContainer as LeafletMap,\r\n} from 'react-leaflet';\r\nimport { divIcon } from 'leaflet';\r\nimport axios from '../axios';\r\nimport './Map.css';\r\n\r\nconst icons = {\r\n  xxSmall: divIcon({ className: 'marker-icon pink', iconSize: [12, 12] }),\r\n  xSmall: divIcon({ className: 'marker-icon pink', iconSize: [16, 16] }),\r\n  small: divIcon({ className: 'marker-icon pink', iconSize: [24, 24] }),\r\n  normal: divIcon({ className: 'marker-icon purple', iconSize: [32, 32] }),\r\n  large: divIcon({ className: 'marker-icon purple', iconSize: [48, 48] }),\r\n  xLarge: divIcon({ className: 'marker-icon red', iconSize: [72, 72] }),\r\n  xxLarge: divIcon({ className: 'marker-icon red', iconSize: [96, 96] }),\r\n};\r\n\r\nfunction MapView() {\r\n  const [locationArray, setLocationArray] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function sortedLocationArray(locations) {\r\n    // eslint-disable-next-line max-len\r\n    return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\r\n  }\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get('/v2/locations').then((res) => {\r\n      const sortedLocations = sortedLocationArray(res.data.locations);\r\n      setLoading(false);\r\n\r\n      if (res.status === 200) {\r\n        setLocationArray(sortedLocations);\r\n      }\r\n    })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  // console.log(locationArray);\r\n\r\n  if (loading) {\r\n    return <p> Fetching!!! </p>;\r\n  }\r\n\r\n  const markerElements = locationArray && locationArray.map((location) => {\r\n    const {\r\n      // eslint-disable-next-line camelcase\r\n      id, country_code,\r\n      country, province,\r\n      coordinates: { latitude, longitude },\r\n      latest: { confirmed },\r\n    } = location;\r\n\r\n    let markerIcon = icons.xxSmall;\r\n    if (confirmed >= 101 && confirmed <= 500) {\r\n      markerIcon = icons.xSmall;\r\n    } else if (confirmed >= 501 && confirmed <= 1000) {\r\n      markerIcon = icons.small;\r\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\r\n      markerIcon = icons.normal;\r\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\r\n      markerIcon = icons.large;\r\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\r\n      markerIcon = icons.xLarge;\r\n    } else if (confirmed >= 50001) {\r\n      markerIcon = icons.xxLarge;\r\n    }\r\n\r\n    let title = country;\r\n    if (province !== '' && province !== country) {\r\n      title = `${province}, ${country}`;\r\n    }\r\n\r\n    return (\r\n            <Marker\r\n                key={`${id}-${country_code}`}\r\n                position={[latitude, longitude]}\r\n                icon={markerIcon}\r\n                onclick={() => onSelectMarker(id)} >\r\n                <Popup>{title}</Popup>\r\n            </Marker>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className='map'>\r\n<LeafletMap center={[51.505, -0.09]}\r\n        zoom={6}>\r\n<TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n           url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n    {markerElements}\r\n</LeafletMap>\r\n    </div>\r\n  );\r\n}\r\nexport default MapView;\r\n"]},"metadata":{},"sourceType":"module"}