{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";/* eslint-disable react/no-unescaped-entities */ /* eslint-disable no-undef */import React from'react';import{Map,TileLayer,Marker,Popup}from'react-leaflet';import{divIcon}from'leaflet';var icons={xxSmall:divIcon({className:'marker-icon pink',iconSize:[12,12]}),xSmall:divIcon({className:'marker-icon pink',iconSize:[16,16]}),small:divIcon({className:'marker-icon pink',iconSize:[24,24]}),normal:divIcon({className:'marker-icon purple',iconSize:[32,32]}),large:divIcon({className:'marker-icon purple',iconSize:[48,48]}),xLarge:divIcon({className:'marker-icon red',iconSize:[72,72]}),xxLarge:divIcon({className:'marker-icon red',iconSize:[96,96]})};function MapView(props){var locationArray=props.locationArray,mapCenter=props.mapCenter,onSelectMarker=props.onSelectMarker;var markerElements=locationArray.map(function(location){var id=location.id,country_code=location.country_code,country=location.country,province=location.province,_location$coordinates=location.coordinates,latitude=_location$coordinates.latitude,longitude=_location$coordinates.longitude,confirmed=location.latest.confirmed;var markerIcon=icons.xxSmall;if(confirmed>=101&&confirmed<=500){markerIcon=icons.xSmall;}else if(confirmed>=501&&confirmed<=1000){markerIcon=icons.small;}else if(confirmed>=1001&&confirmed<=5000){markerIcon=icons.normal;}else if(confirmed>=5001&&confirmed<=10000){markerIcon=icons.large;}else if(confirmed>=10001&&confirmed<=50000){markerIcon=icons.xLarge;}else if(confirmed>=50001){markerIcon=icons.xxLarge;}var title=country;if(province!==''&&province!==country){title=\"\".concat(province,\", \").concat(country);}return/*#__PURE__*/_jsx(Marker// eslint-disable-next-line camelcase\n,{position:[latitude,longitude],icon:markerIcon,onclick:function onclick(){return onSelectMarker(id);},children:/*#__PURE__*/_jsx(Popup,{children:title})},\"\".concat(id,\"-\").concat(country_code));});return/*#__PURE__*/_jsx(\"div\",{className:\"map\",children:/*#__PURE__*/_jsxs(Map,{center:mapCenter,zoom:6,children:[/*#__PURE__*/_jsx(TileLayer,{attribution:\"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",url:\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}@2x.png\"}),markerElements]})});}export default MapView;","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/components/Map/MapView.js"],"names":["React","Map","TileLayer","Marker","Popup","divIcon","icons","xxSmall","className","iconSize","xSmall","small","normal","large","xLarge","xxLarge","MapView","props","locationArray","mapCenter","onSelectMarker","markerElements","map","location","id","country_code","country","province","coordinates","latitude","longitude","confirmed","latest","markerIcon","title"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable no-undef */\nimport React from 'react';\nimport {\n  Map, TileLayer, Marker, Popup,\n} from 'react-leaflet';\nimport { divIcon } from 'leaflet';\n\nconst icons = {\n  xxSmall: divIcon({ className: 'marker-icon pink', iconSize: [12, 12] }),\n  xSmall: divIcon({ className: 'marker-icon pink', iconSize: [16, 16] }),\n  small: divIcon({ className: 'marker-icon pink', iconSize: [24, 24] }),\n  normal: divIcon({ className: 'marker-icon purple', iconSize: [32, 32] }),\n  large: divIcon({ className: 'marker-icon purple', iconSize: [48, 48] }),\n  xLarge: divIcon({ className: 'marker-icon red', iconSize: [72, 72] }),\n  xxLarge: divIcon({ className: 'marker-icon red', iconSize: [96, 96] }),\n};\n\nfunction MapView(props) {\n  const {\n    locationArray,\n    mapCenter,\n    onSelectMarker,\n  } = props;\n\n  const markerElements = locationArray.map((location) => {\n    const {\n      // eslint-disable-next-line camelcase\n      id, country_code,\n      country, province,\n      coordinates: { latitude, longitude },\n      latest: { confirmed },\n    } = location;\n\n    let markerIcon = icons.xxSmall;\n    if (confirmed >= 101 && confirmed <= 500) {\n      markerIcon = icons.xSmall;\n    } else if (confirmed >= 501 && confirmed <= 1000) {\n      markerIcon = icons.small;\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\n      markerIcon = icons.normal;\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\n      markerIcon = icons.large;\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\n      markerIcon = icons.xLarge;\n    } else if (confirmed >= 50001) {\n      markerIcon = icons.xxLarge;\n    }\n\n    let title = country;\n    if (province !== '' && province !== country) {\n      title = `${province}, ${country}`;\n    }\n\n    return (\n      <Marker\n        // eslint-disable-next-line camelcase\n        key={`${id}-${country_code}`}\n        position={[latitude, longitude]}\n        icon={markerIcon}\n        onclick={() => onSelectMarker(id)} >\n        <Popup>\n          {title}\n        </Popup>\n      </Marker>\n    );\n  });\n\n  return (\n    <div className='map'>\n      <Map center={mapCenter}\n        zoom={6}>\n        <TileLayer attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}@2x.png\"\n        />\n        {markerElements}\n      </Map>\n\n    </div>\n  );\n}\nexport default MapView;\n"]},"metadata":{},"sourceType":"module"}