{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\components\\\\MapView.js\";\nimport React from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { divIcon } from 'leaflet';\n/*\r\n1. 1-100 => pink, super very small\r\n2. 101-500 => pink, very small\r\n3. 501-1000 => pink, small\r\n4. 1001-5000 => purple, normal\r\n5. 5001-10000 => purple, big\r\n6. 10001-50000 => red, very big\r\n7. 50000 up => red, super very big\r\n*/\n\nconst icons = {\n  xxSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [12, 12]\n  }),\n  xSmall: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [16, 16]\n  }),\n  small: divIcon({\n    className: 'marker-icon pink',\n    iconSize: [24, 24]\n  }),\n  normal: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [32, 32]\n  }),\n  large: divIcon({\n    className: 'marker-icon purple',\n    iconSize: [48, 48]\n  }),\n  xLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [72, 72]\n  }),\n  xxLarge: divIcon({\n    className: 'marker-icon red',\n    iconSize: [96, 96]\n  })\n};\n\nfunction MapView(props) {\n  const {\n    locationArray,\n    mapCenter,\n    onSelectMarker\n  } = props;\n  const markerElements = locationArray.map(location => {\n    const {\n      id,\n      country_code,\n      country,\n      province,\n      coordinates: {\n        latitude,\n        longitude\n      },\n      latest: {\n        confirmed\n      }\n    } = location;\n    let markerIcon = icons.xxSmall;\n\n    if (confirmed >= 101 && confirmed <= 500) {\n      markerIcon = icons.xSmall;\n    } else if (confirmed >= 501 && confirmed <= 1000) {\n      markerIcon = icons.small;\n    } else if (confirmed >= 1001 && confirmed <= 5000) {\n      markerIcon = icons.normal;\n    } else if (confirmed >= 5001 && confirmed <= 10000) {\n      markerIcon = icons.large;\n    } else if (confirmed >= 10001 && confirmed <= 50000) {\n      markerIcon = icons.xLarge;\n    } else if (confirmed >= 50001) {\n      markerIcon = icons.xxLarge;\n    }\n\n    let title = country;\n\n    if (province !== '' && province !== country) {\n      title = `${province}, ${country}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [latitude, longitude],\n      icon: markerIcon,\n      onclick: () => onSelectMarker(id),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, `${id}-${country_code}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Map, {\n    className: \"map-view\",\n    center: mapCenter,\n    zoom: 5,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), markerElements]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MapView;\nexport default MapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/components/MapView.js"],"names":["React","Map","TileLayer","Marker","Popup","divIcon","icons","xxSmall","className","iconSize","xSmall","small","normal","large","xLarge","xxLarge","MapView","props","locationArray","mapCenter","onSelectMarker","markerElements","map","location","id","country_code","country","province","coordinates","latitude","longitude","latest","confirmed","markerIcon","title"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { divIcon } from 'leaflet';\r\n\r\n/*\r\n1. 1-100 => pink, super very small\r\n2. 101-500 => pink, very small\r\n3. 501-1000 => pink, small\r\n4. 1001-5000 => purple, normal\r\n5. 5001-10000 => purple, big\r\n6. 10001-50000 => red, very big\r\n7. 50000 up => red, super very big\r\n*/\r\nconst icons = {\r\n    xxSmall: divIcon({className: 'marker-icon pink', iconSize: [12, 12]}),\r\n    xSmall: divIcon({className: 'marker-icon pink', iconSize: [16, 16]}),\r\n    small: divIcon({className: 'marker-icon pink', iconSize: [24, 24]}),\r\n    normal: divIcon({className: 'marker-icon purple', iconSize: [32, 32]}),\r\n\tlarge: divIcon({className: 'marker-icon purple', iconSize: [48, 48]}),\r\n\txLarge: divIcon({className: 'marker-icon red', iconSize: [72, 72]}),\r\n\txxLarge: divIcon({className: 'marker-icon red', iconSize: [96, 96]})\r\n};\r\n\r\nfunction MapView(props) {\r\n    const { locationArray, mapCenter, onSelectMarker } = props;\r\n\r\n    const markerElements = locationArray.map(location => {\r\n        const {\r\n            id, country_code,\r\n            country, province,\r\n            coordinates: { latitude, longitude },\r\n            latest: { confirmed }\r\n        } = location;\r\n\r\n        let markerIcon = icons.xxSmall;\r\n        if (confirmed >= 101 && confirmed <= 500) {\r\n            markerIcon = icons.xSmall;\r\n        }\r\n        else if (confirmed >= 501 && confirmed <= 1000) {\r\n            markerIcon = icons.small;\r\n        }\r\n        else if (confirmed >= 1001 && confirmed <= 5000) {\r\n            markerIcon = icons.normal;\r\n        }\r\n        else if (confirmed >= 5001 && confirmed <= 10000) {\r\n            markerIcon = icons.large;\r\n        }\r\n        else if (confirmed >= 10001 && confirmed <= 50000) {\r\n            markerIcon = icons.xLarge;\r\n        }\r\n        else if (confirmed >= 50001) {\r\n            markerIcon = icons.xxLarge;\r\n        }\r\n\r\n        let title = country;\r\n        if (province !== '' && province !== country) {\r\n            title = `${province}, ${country}`;\r\n        }\r\n\r\n        return (\r\n            <Marker\r\n                key={`${id}-${country_code}`}\r\n                position={[latitude, longitude]}\r\n                icon={markerIcon}\r\n                onclick={() => onSelectMarker(id)} >\r\n                <Popup>{title}</Popup>\r\n            </Marker>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Map className=\"map-view\" center={mapCenter} zoom={5}>\r\n            <TileLayer\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            {markerElements}\r\n        </Map>\r\n    );\r\n}\r\n\r\nexport default MapView;"]},"metadata":{},"sourceType":"module"}