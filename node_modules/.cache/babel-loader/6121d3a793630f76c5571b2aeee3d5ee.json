{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-tabs */\nimport React, { useState, useEffect } from 'react';\nimport './CSS/App.scss';\nimport axios from './axios';\nimport Summary from './components/Summary.jsx';\nimport MapView from './components/MapView';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  _s();\n\n  const [locationArray, setLocationArray] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [mapCenter, setMapCenter] = useState([13, 100]);\n  const [loading, setLoading] = useState(false);\n\n  function sortedLocationArray(locations) {\n    // eslint-disable-next-line max-len\n    return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\n  } // const onSelectLocation = useCallback((id) => {\n  //   const location = locationArray.find((_location) => _location.id === id);\n  //   if (location === undefined) {\n  //     setSelectedLocation(null);\n  //     return;\n  //   }\n  //   setSelectedLocation(location);\n  //   const { coordinates: { latitude, longitude } } = location;\n  //   setMapCenter([latitude, longitude]);\n  // }, [locationArray]);\n  // const onDeselectLocation = useCallback(() => {\n  //   setSelectedLocation(null);\n  // }, []);\n\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get('/v2/locations').then(res => {\n      const sortedLocations = sortedLocationArray(res.data.locations);\n      setLoading(false);\n\n      if (res.status === 200) {\n        setLocationArray(sortedLocations);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // console.log(locationArray);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Fetching!!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 Dashboard by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Summary, {\n        locationArray: locationArray,\n        selectedLocation: selectedLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards_map\",\n        children: /*#__PURE__*/_jsxDEV(MapView, {\n          locationArray: locationArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bKEaxe+SjIOBknpfA37X84JtEcg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/App.jsx"],"names":["React","useState","useEffect","axios","Summary","MapView","App","locationArray","setLocationArray","selectedLocation","setSelectedLocation","mapCenter","setMapCenter","loading","setLoading","sortedLocationArray","locations","sort","location1","location2","latest","confirmed","get","then","res","sortedLocations","data","status","catch","error","console","log"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,0BAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,CAAC,EAAD,EAAK,GAAL,CAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEA,WAASc,mBAAT,CAA6BC,SAA7B,EAAwC;AACtC;AACA,WAAO,CAAC,GAAGA,SAAJ,EAAeC,IAAf,CAAoB,CAACC,SAAD,EAAYC,SAAZ,KAA0BA,SAAS,CAACC,MAAV,CAAiBC,SAAjB,GAA6BH,SAAS,CAACE,MAAV,CAAiBC,SAA5F,CAAP;AACD,GATY,CAUb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAX,IAAAA,KAAK,CAACmB,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAiCC,GAAD,IAAS;AACvC,YAAMC,eAAe,GAAGV,mBAAmB,CAACS,GAAG,CAACE,IAAJ,CAASV,SAAV,CAA3C;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;;AAEA,UAAIU,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtBnB,QAAAA,gBAAgB,CAACiB,eAAD,CAAhB;AACD;AACF,KAPD,EAQGG,KARH,CAQUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVH;AAWD,GAbQ,EAaN,EAbM,CAAT,CAzBa,CAuCb;;AAEA,MAAIhB,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAOJ,QAAC,OAAD;AACM,QAAA,aAAa,EAAEN,aADrB;AAEM,QAAA,gBAAgB,EAAEE;AAFxB;AAAA;AAAA;AAAA;AAAA,cAPI,eAeJ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACA,QAAC,OAAD;AACI,UAAA,aAAa,EAAEF;AADnB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAfI;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAFF;AAyBD;;GAtEQD,G;;KAAAA,G;AAwET,eAAeA,GAAf","sourcesContent":["/* eslint-disable no-tabs */\r\nimport React, { useState, useEffect } from 'react';\r\nimport './CSS/App.scss';\r\nimport axios from './axios';\r\nimport Summary from './components/Summary.jsx';\r\nimport MapView from './components/MapView';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nfunction App() {\r\n  const [locationArray, setLocationArray] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState([13, 100]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function sortedLocationArray(locations) {\r\n    // eslint-disable-next-line max-len\r\n    return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\r\n  }\r\n  // const onSelectLocation = useCallback((id) => {\r\n  //   const location = locationArray.find((_location) => _location.id === id);\r\n  //   if (location === undefined) {\r\n  //     setSelectedLocation(null);\r\n  //     return;\r\n  //   }\r\n  //   setSelectedLocation(location);\r\n  //   const { coordinates: { latitude, longitude } } = location;\r\n  //   setMapCenter([latitude, longitude]);\r\n  // }, [locationArray]);\r\n\r\n  // const onDeselectLocation = useCallback(() => {\r\n  //   setSelectedLocation(null);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get('/v2/locations').then((res) => {\r\n      const sortedLocations = sortedLocationArray(res.data.locations);\r\n      setLoading(false);\r\n\r\n      if (res.status === 200) {\r\n        setLocationArray(sortedLocations);\r\n      }\r\n    })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  // console.log(locationArray);\r\n\r\n  if (loading) {\r\n    return <p> Fetching!!! </p>;\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n    <div className=\"app__left\">\r\n    <div className=\"app__header\">\r\n    <h1>COVID-19 Dashboard by the Center for Systems Science and Engineering\r\n        (CSSE) at Johns Hopkins University (JHU)</h1>\r\n\r\n   </div>\r\n\r\n<Summary\r\n      locationArray={locationArray}\r\n      selectedLocation={selectedLocation}/>\r\n\r\n      {/* // selectedLocation={selectedLocation}\r\n      // onSelectItem={onSelectLocation}\r\n      // onDeselectItem={onDeselectLocation} /> */}\r\n\r\n<div className='cards_map'>\r\n<MapView\r\n\t\t\t\tlocationArray={locationArray} />\r\n</div>\r\n</div>\r\n </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}