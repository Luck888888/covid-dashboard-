{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\RssSchool\\\\covid-dashboard\\\\covid-dashboard\\\\covid-dashboard\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-tabs */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './CSS/App.scss'; // import numeral from 'numeral';\n// import { Card, CardContent } from '@material-ui/core';\n\nimport axios from './axios';\nimport Summary from './components/Summary.jsx';\nimport MapView from './components/MapView';\nimport 'leaflet/dist/leaflet.css';\nimport DetailsView from './components/DetailsView.jsx';\n\nfunction App() {\n  _s();\n\n  // const [totalConfirmed, setTotalConfirmed] = React.useState(0);\n  // const [totalRecovered, setTotalRecovered] = React.useState(0);\n  // const [totalDeaths, setTotalDeaths] = React.useState(0);\n  // const [covidSummary, setCovidSummary] = React.useState({});\n  const [locationArray, setLocationArray] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [mapCenter, setMapCenter] = useState([13, 100]);\n  const [loading, setLoading] = useState(false);\n\n  function sortedLocationArray(locations) {\n    // eslint-disable-next-line max-len\n    return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\n  }\n\n  const onSelectLocation = useCallback(id => {\n    const location = locationArray.find(_location => _location.id === id);\n\n    if (location === undefined) {\n      setSelectedLocation(null);\n      return;\n    }\n\n    setSelectedLocation(location);\n    const {\n      coordinates: {\n        latitude,\n        longitude\n      }\n    } = location;\n    setMapCenter([latitude, longitude]);\n  }, [locationArray]);\n  const onDeselectLocation = useCallback(() => {\n    setSelectedLocation(null);\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n    axios.get('/v2/locations').then(res => {\n      const sortedLocations = sortedLocationArray(res.data.locations);\n      setLoading(false);\n\n      if (res.status === 200) {\n        // setTotalConfirmed(res.data.Global.TotalConfirmed);\n        // setTotalRecovered(res.data.Global.NewRecovered);\n        // setTotalDeaths(res.data.Global.TotalDeaths);\n        // setCovidSummary(res.data);\n        setLocationArray(sortedLocations); // setCovidSummary = ArraySort(setCovidSummary, 'TotalConfirmed', { reverse: true });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); // console.log(locationArray);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Fetching!!! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  let detailsView = null;\n\n  if (selectedLocation != null) {\n    detailsView = /*#__PURE__*/_jsxDEV(DetailsView, {\n      location: selectedLocation,\n      onClickClose: onDeselectLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"COVID-19 Dashboard by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Summary, {\n        locationArray: locationArray,\n        selectedLocation: selectedLocation,\n        onSelectItem: onSelectLocation,\n        onDeselectItem: onDeselectLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards_map\",\n        children: [/*#__PURE__*/_jsxDEV(MapView, {\n          locationArray: locationArray,\n          mapCenter: mapCenter,\n          onSelectMarker: onSelectLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 1\n        }, this), detailsView]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Pmy6G42m6GfSb0Uds8wE1vLo74c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/RssSchool/covid-dashboard/covid-dashboard/covid-dashboard/src/App.jsx"],"names":["React","useState","useEffect","useCallback","axios","Summary","MapView","DetailsView","App","locationArray","setLocationArray","selectedLocation","setSelectedLocation","mapCenter","setMapCenter","loading","setLoading","sortedLocationArray","locations","sort","location1","location2","latest","confirmed","onSelectLocation","id","location","find","_location","undefined","coordinates","latitude","longitude","onDeselectLocation","get","then","res","sortedLocations","data","status","catch","error","console","log","detailsView"],"mappings":"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","sourcesContent":["/* eslint-disable no-tabs */\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport './CSS/App.scss';\r\n// import numeral from 'numeral';\r\n// import { Card, CardContent } from '@material-ui/core';\r\nimport axios from './axios';\r\nimport Summary from './components/Summary.jsx';\r\nimport MapView from './components/MapView';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport DetailsView from './components/DetailsView.jsx';\r\n\r\nfunction App() {\r\n  // const [totalConfirmed, setTotalConfirmed] = React.useState(0);\r\n  // const [totalRecovered, setTotalRecovered] = React.useState(0);\r\n  // const [totalDeaths, setTotalDeaths] = React.useState(0);\r\n  // const [covidSummary, setCovidSummary] = React.useState({});\r\n  const [locationArray, setLocationArray] = useState([]);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [mapCenter, setMapCenter] = useState([13, 100]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function sortedLocationArray(locations) {\r\n    // eslint-disable-next-line max-len\r\n    return [...locations].sort((location1, location2) => location2.latest.confirmed - location1.latest.confirmed);\r\n  }\r\n  const onSelectLocation = useCallback((id) => {\r\n    const location = locationArray.find((_location) => _location.id === id);\r\n    if (location === undefined) {\r\n      setSelectedLocation(null);\r\n      return;\r\n    }\r\n    setSelectedLocation(location);\r\n    const { coordinates: { latitude, longitude } } = location;\r\n    setMapCenter([latitude, longitude]);\r\n  }, [locationArray]);\r\n\r\n  const onDeselectLocation = useCallback(() => {\r\n    setSelectedLocation(null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios.get('/v2/locations').then((res) => {\r\n      const sortedLocations = sortedLocationArray(res.data.locations);\r\n      setLoading(false);\r\n\r\n      if (res.status === 200) {\r\n        // setTotalConfirmed(res.data.Global.TotalConfirmed);\r\n        // setTotalRecovered(res.data.Global.NewRecovered);\r\n        // setTotalDeaths(res.data.Global.TotalDeaths);\r\n        // setCovidSummary(res.data);\r\n        setLocationArray(sortedLocations);\r\n        // setCovidSummary = ArraySort(setCovidSummary, 'TotalConfirmed', { reverse: true });\r\n      }\r\n    })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  // console.log(locationArray);\r\n\r\n  if (loading) {\r\n    return <p> Fetching!!! </p>;\r\n  }\r\n\r\n  let detailsView = null;\r\n  if (selectedLocation != null) {\r\n    detailsView = <DetailsView location={selectedLocation} onClickClose={onDeselectLocation} />;\r\n  }\r\n\r\n  return (\r\n\r\n    <div className=\"App\">\r\n    <div className=\"app__left\">\r\n    <div className=\"app__header\">\r\n    <h1>COVID-19 Dashboard by the Center for Systems Science and Engineering\r\n        (CSSE) at Johns Hopkins University (JHU)</h1>\r\n\r\n   </div>\r\n\r\n<Summary\r\n      locationArray={locationArray}\r\n      selectedLocation={selectedLocation}\r\n      onSelectItem={onSelectLocation}\r\n      onDeselectItem={onDeselectLocation} />\r\n\r\n {/* <div className=\"app__stats\"> <Summary\r\n    //  totalConfirmed={totalConfirmed}\r\n    //  totalRecovered={totalRecovered}\r\n    //  totalDeaths={totalDeaths}\r\n    //  covidSummary={covidSummary}\r\n     country={''}\r\n/></div> */}\r\n\r\n<div className='cards_map'>\r\n<MapView\r\n\t\t\t\tlocationArray={locationArray}\r\n\t\t\t\tmapCenter={mapCenter}\r\n\t\t\t\tonSelectMarker={onSelectLocation} />\r\n\t\t\t{detailsView}\r\n</div>\r\n\r\n{/* <Card className=\"app__right\">\r\n      <CardContent>\r\n<div className='table'>\r\n       <h3>Cases by Country/Region/Sovereignty</h3> */}\r\n           {/* {covidSummary.Countries && covidSummary.Countries.map((country) => (\r\n        // eslint-disable-next-line react/jsx-key\r\n        <tr>\r\n          <td>{country.Country}</td>\r\n       <td>\r\n             <strong>{numeral(country.TotalConfirmed).format(' ')}</strong>\r\n          </td>\r\n        </tr>\r\n           ))} */}\r\n{/* </div>\r\n        </CardContent>\r\n      </Card> */}\r\n</div>\r\n </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}